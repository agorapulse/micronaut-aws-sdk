/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2019 Vladimir Orany.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import com.amazonaws.services.lambda.model.Runtime
import jp.classmethod.aws.gradle.lambda.AWSLambdaMigrateFunctionTask

config {
    publishing { enabled = false }
    bintray { enabled = false }
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "jp.classmethod.aws:gradle-aws-plugin:0.38"
    }
}

apply from: '../gradle/lambda.gradle'
apply plugin: 'jp.classmethod.aws.lambda'

dependencies {
    compile group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb'

    testCompile group: 'com.agorapulse', name: 'dru-client-dynamodb', version: druVersion
}

task deployLambda(type: AWSLambdaMigrateFunctionTask, dependsOn: build, group: 'deploy')  {
    functionName = 'MicronautExamplePlanets'
    handler = 'com.agorapulse.micronaut.http.examples.planets.MicronautHandler::handleRequest'
    role = "arn:aws:iam::281741939716:role/service-role/MicronautExamples"
    runtime = Runtime.Java8
    zipFile = buildZip.archivePath
    memorySize = 512
    timeout = 60
}
