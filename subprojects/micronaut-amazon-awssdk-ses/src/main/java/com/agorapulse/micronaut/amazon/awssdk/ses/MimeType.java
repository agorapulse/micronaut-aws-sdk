/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2018-2022 Agorapulse.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.agorapulse.micronaut.amazon.awssdk.ses;

import javax.annotation.Nonnull;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.function.Function;
import java.util.stream.Collectors;

/**
 * Mime types mapping.
 */
class MimeType {

    private static final Map<String, Collection<String>> ALL_EXTENSIONS_TO_MIME_TYPES;
    private static final Set<String> UNSUPPORTED_EXTENSIONS;
    private static final Set<String> UNSUPPORTED_MIME_TYPES;

    static {
        Map<String, Collection<String>> types = new TreeMap<>();
        Function<String, Collection<String>> newList = key -> new ArrayList<>();
        types.computeIfAbsent(".3dm", newList).add("x-world/x-3dmf");
        types.computeIfAbsent(".3dmf", newList).add("x-world/x-3dmf");
        types.computeIfAbsent(".a", newList).add("application/octet-stream");
        types.computeIfAbsent(".aab", newList).add("application/x-authorware-bin");
        types.computeIfAbsent(".aam", newList).add("application/x-authorware-map");
        types.computeIfAbsent(".aas", newList).add("application/x-authorware-seg");
        types.computeIfAbsent(".abc", newList).add("text/vnd.abc");
        types.computeIfAbsent(".acgi", newList).add("text/html");
        types.computeIfAbsent(".afl", newList).add("video/animaflex");
        types.computeIfAbsent(".ai", newList).add("application/postscript");
        types.computeIfAbsent(".aif", newList).add("audio/aiff");
        types.computeIfAbsent(".aif", newList).add("audio/x-aiff");
        types.computeIfAbsent(".aifc", newList).add("audio/aiff");
        types.computeIfAbsent(".aifc", newList).add("audio/x-aiff");
        types.computeIfAbsent(".aiff", newList).add("audio/aiff");
        types.computeIfAbsent(".aiff", newList).add("audio/x-aiff");
        types.computeIfAbsent(".aim", newList).add("application/x-aim");
        types.computeIfAbsent(".aip", newList).add("text/x-audiosoft-intra");
        types.computeIfAbsent(".ani", newList).add("application/x-navi-animation");
        types.computeIfAbsent(".aos", newList).add("application/x-nokia-9000-communicator-add-on-software");
        types.computeIfAbsent(".aps", newList).add("application/mime");
        types.computeIfAbsent(".arc", newList).add("application/octet-stream");
        types.computeIfAbsent(".arj", newList).add("application/arj");
        types.computeIfAbsent(".arj", newList).add("application/octet-stream");
        types.computeIfAbsent(".art", newList).add("image/x-jg");
        types.computeIfAbsent(".asf", newList).add("video/x-ms-asf");
        types.computeIfAbsent(".asm", newList).add("text/x-asm");
        types.computeIfAbsent(".asp", newList).add("text/asp");
        types.computeIfAbsent(".asx", newList).add("application/x-mplayer2");
        types.computeIfAbsent(".asx", newList).add("video/x-ms-asf");
        types.computeIfAbsent(".asx", newList).add("video/x-ms-asf-plugin");
        types.computeIfAbsent(".au", newList).add("audio/basic");
        types.computeIfAbsent(".au", newList).add("audio/x-au");
        types.computeIfAbsent(".avi", newList).add("application/x-troff-msvideo");
        types.computeIfAbsent(".avi", newList).add("video/avi");
        types.computeIfAbsent(".avi", newList).add("video/msvideo");
        types.computeIfAbsent(".avi", newList).add("video/x-msvideo");
        types.computeIfAbsent(".avs", newList).add("video/avs-video");
        types.computeIfAbsent(".bcpio", newList).add("application/x-bcpio");
        types.computeIfAbsent(".bin", newList).add("application/mac-binary");
        types.computeIfAbsent(".bin", newList).add("application/macbinary");
        types.computeIfAbsent(".bin", newList).add("application/octet-stream");
        types.computeIfAbsent(".bin", newList).add("application/x-binary");
        types.computeIfAbsent(".bin", newList).add("application/x-macbinary");
        types.computeIfAbsent(".bm", newList).add("image/bmp");
        types.computeIfAbsent(".bmp", newList).add("image/bmp");
        types.computeIfAbsent(".bmp", newList).add("image/x-windows-bmp");
        types.computeIfAbsent(".boo", newList).add("application/book");
        types.computeIfAbsent(".book", newList).add("application/book");
        types.computeIfAbsent(".boz", newList).add("application/x-bzip2");
        types.computeIfAbsent(".bsh", newList).add("application/x-bsh");
        types.computeIfAbsent(".bz", newList).add("application/x-bzip");
        types.computeIfAbsent(".bz2", newList).add("application/x-bzip2");
        types.computeIfAbsent(".c", newList).add("text/plain");
        types.computeIfAbsent(".c", newList).add("text/x-c");
        types.computeIfAbsent(".c++", newList).add("text/plain");
        types.computeIfAbsent(".cat", newList).add("application/vnd.ms-pki.seccat");
        types.computeIfAbsent(".cc", newList).add("text/plain");
        types.computeIfAbsent(".cc", newList).add("text/x-c");
        types.computeIfAbsent(".ccad", newList).add("application/clariscad");
        types.computeIfAbsent(".cco", newList).add("application/x-cocoa");
        types.computeIfAbsent(".cdf", newList).add("application/cdf");
        types.computeIfAbsent(".cdf", newList).add("application/x-cdf");
        types.computeIfAbsent(".cdf", newList).add("application/x-netcdf");
        types.computeIfAbsent(".cer", newList).add("application/pkix-cert");
        types.computeIfAbsent(".cer", newList).add("application/x-x509-ca-cert");
        types.computeIfAbsent(".cha", newList).add("application/x-chat");
        types.computeIfAbsent(".chat", newList).add("application/x-chat");
        types.computeIfAbsent(".class", newList).add("application/java");
        types.computeIfAbsent(".class", newList).add("application/java-byte-code");
        types.computeIfAbsent(".class", newList).add("application/x-java-class");
        types.computeIfAbsent(".com", newList).add("application/octet-stream");
        types.computeIfAbsent(".com", newList).add("text/plain");
        types.computeIfAbsent(".conf", newList).add("text/plain");
        types.computeIfAbsent(".cpio", newList).add("application/x-cpio");
        types.computeIfAbsent(".cpp", newList).add("text/x-c");
        types.computeIfAbsent(".cpt", newList).add("application/mac-compactpro");
        types.computeIfAbsent(".cpt", newList).add("application/x-compactpro");
        types.computeIfAbsent(".cpt", newList).add("application/x-cpt");
        types.computeIfAbsent(".crl", newList).add("application/pkcs-crl");
        types.computeIfAbsent(".crl", newList).add("application/pkix-crl");
        types.computeIfAbsent(".crt", newList).add("application/pkix-cert");
        types.computeIfAbsent(".crt", newList).add("application/x-x509-ca-cert");
        types.computeIfAbsent(".crt", newList).add("application/x-x509-user-cert");
        types.computeIfAbsent(".csh", newList).add("application/x-csh");
        types.computeIfAbsent(".csh", newList).add("text/x-script.csh");
        types.computeIfAbsent(".css", newList).add("application/x-pointplus");
        types.computeIfAbsent(".css", newList).add("text/css");
        types.computeIfAbsent(".cxx", newList).add("text/plain");
        types.computeIfAbsent(".dcr", newList).add("application/x-director");
        types.computeIfAbsent(".deepv", newList).add("application/x-deepv");
        types.computeIfAbsent(".def", newList).add("text/plain");
        types.computeIfAbsent(".der", newList).add("application/x-x509-ca-cert");
        types.computeIfAbsent(".dif", newList).add("video/x-dv");
        types.computeIfAbsent(".dir", newList).add("application/x-director");
        types.computeIfAbsent(".dl", newList).add("video/dl");
        types.computeIfAbsent(".dl", newList).add("video/x-dl");
        types.computeIfAbsent(".doc", newList).add("application/msword");
        types.computeIfAbsent(".dot", newList).add("application/msword");
        types.computeIfAbsent(".dp", newList).add("application/commonground");
        types.computeIfAbsent(".drw", newList).add("application/drafting");
        types.computeIfAbsent(".dump", newList).add("application/octet-stream");
        types.computeIfAbsent(".dv", newList).add("video/x-dv");
        types.computeIfAbsent(".dvi", newList).add("application/x-dvi");
        types.computeIfAbsent(".dwf", newList).add("drawing/x-dwf (old)");
        types.computeIfAbsent(".dwf", newList).add("model/vnd.dwf");
        types.computeIfAbsent(".dwg", newList).add("application/acad");
        types.computeIfAbsent(".dwg", newList).add("image/vnd.dwg");
        types.computeIfAbsent(".dwg", newList).add("image/x-dwg");
        types.computeIfAbsent(".dxf", newList).add("application/dxf");
        types.computeIfAbsent(".dxf", newList).add("image/vnd.dwg");
        types.computeIfAbsent(".dxf", newList).add("image/x-dwg");
        types.computeIfAbsent(".dxr", newList).add("application/x-director");
        types.computeIfAbsent(".el", newList).add("text/x-script.elisp");
        types.computeIfAbsent(".elc", newList).add("application/x-bytecode.elisp (compiled elisp)");
        types.computeIfAbsent(".elc", newList).add("application/x-elc");
        types.computeIfAbsent(".env", newList).add("application/x-envoy");
        types.computeIfAbsent(".eps", newList).add("application/postscript");
        types.computeIfAbsent(".es", newList).add("application/x-esrehber");
        types.computeIfAbsent(".etx", newList).add("text/x-setext");
        types.computeIfAbsent(".evy", newList).add("application/envoy");
        types.computeIfAbsent(".evy", newList).add("application/x-envoy");
        types.computeIfAbsent(".exe", newList).add("application/octet-stream");
        types.computeIfAbsent(".f", newList).add("text/plain");
        types.computeIfAbsent(".f", newList).add("text/x-fortran");
        types.computeIfAbsent(".f77", newList).add("text/x-fortran");
        types.computeIfAbsent(".f90", newList).add("text/plain");
        types.computeIfAbsent(".f90", newList).add("text/x-fortran");
        types.computeIfAbsent(".fdf", newList).add("application/vnd.fdf");
        types.computeIfAbsent(".fif", newList).add("application/fractals");
        types.computeIfAbsent(".fif", newList).add("image/fif");
        types.computeIfAbsent(".fli", newList).add("video/fli");
        types.computeIfAbsent(".fli", newList).add("video/x-fli");
        types.computeIfAbsent(".flo", newList).add("image/florian");
        types.computeIfAbsent(".flx", newList).add("text/vnd.fmi.flexstor");
        types.computeIfAbsent(".fmf", newList).add("video/x-atomic3d-feature");
        types.computeIfAbsent(".for", newList).add("text/plain");
        types.computeIfAbsent(".for", newList).add("text/x-fortran");
        types.computeIfAbsent(".fpx", newList).add("image/vnd.fpx");
        types.computeIfAbsent(".fpx", newList).add("image/vnd.net-fpx");
        types.computeIfAbsent(".frl", newList).add("application/freeloader");
        types.computeIfAbsent(".funk", newList).add("audio/make");
        types.computeIfAbsent(".g", newList).add("text/plain");
        types.computeIfAbsent(".g3", newList).add("image/g3fax");
        types.computeIfAbsent(".gif", newList).add("image/gif");
        types.computeIfAbsent(".gl", newList).add("video/gl");
        types.computeIfAbsent(".gl", newList).add("video/x-gl");
        types.computeIfAbsent(".gsd", newList).add("audio/x-gsm");
        types.computeIfAbsent(".gsm", newList).add("audio/x-gsm");
        types.computeIfAbsent(".gsp", newList).add("application/x-gsp");
        types.computeIfAbsent(".gss", newList).add("application/x-gss");
        types.computeIfAbsent(".gtar", newList).add("application/x-gtar");
        types.computeIfAbsent(".gz", newList).add("application/x-compressed");
        types.computeIfAbsent(".gz", newList).add("application/x-gzip");
        types.computeIfAbsent(".gzip", newList).add("application/x-gzip");
        types.computeIfAbsent(".gzip", newList).add("multipart/x-gzip");
        types.computeIfAbsent(".h", newList).add("text/plain");
        types.computeIfAbsent(".h", newList).add("text/x-h");
        types.computeIfAbsent(".hdf", newList).add("application/x-hdf");
        types.computeIfAbsent(".help", newList).add("application/x-helpfile");
        types.computeIfAbsent(".hgl", newList).add("application/vnd.hp-hpgl");
        types.computeIfAbsent(".hh", newList).add("text/plain");
        types.computeIfAbsent(".hh", newList).add("text/x-h");
        types.computeIfAbsent(".hlb", newList).add("text/x-script");
        types.computeIfAbsent(".hlp", newList).add("application/hlp");
        types.computeIfAbsent(".hlp", newList).add("application/x-helpfile");
        types.computeIfAbsent(".hlp", newList).add("application/x-winhelp");
        types.computeIfAbsent(".hpg", newList).add("application/vnd.hp-hpgl");
        types.computeIfAbsent(".hpgl", newList).add("application/vnd.hp-hpgl");
        types.computeIfAbsent(".hqx", newList).add("application/binhex");
        types.computeIfAbsent(".hqx", newList).add("application/binhex4");
        types.computeIfAbsent(".hqx", newList).add("application/mac-binhex");
        types.computeIfAbsent(".hqx", newList).add("application/mac-binhex40");
        types.computeIfAbsent(".hqx", newList).add("application/x-binhex40");
        types.computeIfAbsent(".hqx", newList).add("application/x-mac-binhex40");
        types.computeIfAbsent(".hta", newList).add("application/hta");
        types.computeIfAbsent(".htc", newList).add("text/x-component");
        types.computeIfAbsent(".htm", newList).add("text/html");
        types.computeIfAbsent(".html", newList).add("text/html");
        types.computeIfAbsent(".htmls", newList).add("text/html");
        types.computeIfAbsent(".htt", newList).add("text/webviewhtml");
        types.computeIfAbsent(".htx", newList).add("text/html");
        types.computeIfAbsent(".ice", newList).add("x-conference/x-cooltalk");
        types.computeIfAbsent(".ico", newList).add("image/x-icon");
        types.computeIfAbsent(".idc", newList).add("text/plain");
        types.computeIfAbsent(".ief", newList).add("image/ief");
        types.computeIfAbsent(".iefs", newList).add("image/ief");
        types.computeIfAbsent(".iges", newList).add("application/iges");
        types.computeIfAbsent(".iges", newList).add("model/iges");
        types.computeIfAbsent(".igs", newList).add("application/iges");
        types.computeIfAbsent(".igs", newList).add("model/iges");
        types.computeIfAbsent(".ima", newList).add("application/x-ima");
        types.computeIfAbsent(".imap", newList).add("application/x-httpd-imap");
        types.computeIfAbsent(".inf", newList).add("application/inf");
        types.computeIfAbsent(".ins", newList).add("application/x-internett-signup");
        types.computeIfAbsent(".ip", newList).add("application/x-ip2");
        types.computeIfAbsent(".isu", newList).add("video/x-isvideo");
        types.computeIfAbsent(".it", newList).add("audio/it");
        types.computeIfAbsent(".iv", newList).add("application/x-inventor");
        types.computeIfAbsent(".ivr", newList).add("i-world/i-vrml");
        types.computeIfAbsent(".ivy", newList).add("application/x-livescreen");
        types.computeIfAbsent(".jam", newList).add("audio/x-jam");
        types.computeIfAbsent(".jav", newList).add("text/plain");
        types.computeIfAbsent(".jav", newList).add("text/x-java-source");
        types.computeIfAbsent(".java", newList).add("text/plain");
        types.computeIfAbsent(".java", newList).add("text/x-java-source");
        types.computeIfAbsent(".jcm", newList).add("application/x-java-commerce");
        types.computeIfAbsent(".jfif", newList).add("image/jpeg");
        types.computeIfAbsent(".jfif", newList).add("image/pjpeg");
        types.computeIfAbsent(".jfif-tbnl", newList).add("image/jpeg");
        types.computeIfAbsent(".jpe", newList).add("image/jpeg");
        types.computeIfAbsent(".jpe", newList).add("image/pjpeg");
        types.computeIfAbsent(".jpeg", newList).add("image/jpeg");
        types.computeIfAbsent(".jpeg", newList).add("image/pjpeg");
        types.computeIfAbsent(".jpg", newList).add("image/jpeg");
        types.computeIfAbsent(".jpg", newList).add("image/pjpeg");
        types.computeIfAbsent(".jps", newList).add("image/x-jps");
        types.computeIfAbsent(".js", newList).add("application/x-javascript");
        types.computeIfAbsent(".js", newList).add("application/javascript");
        types.computeIfAbsent(".js", newList).add("application/ecmascript");
        types.computeIfAbsent(".js", newList).add("text/javascript");
        types.computeIfAbsent(".js", newList).add("text/ecmascript");
        types.computeIfAbsent(".jut", newList).add("image/jutvision");
        types.computeIfAbsent(".kar", newList).add("audio/midi");
        types.computeIfAbsent(".kar", newList).add("music/x-karaoke");
        types.computeIfAbsent(".ksh", newList).add("application/x-ksh");
        types.computeIfAbsent(".ksh", newList).add("text/x-script.ksh");
        types.computeIfAbsent(".la", newList).add("audio/nspaudio");
        types.computeIfAbsent(".la", newList).add("audio/x-nspaudio");
        types.computeIfAbsent(".lam", newList).add("audio/x-liveaudio");
        types.computeIfAbsent(".latex", newList).add("application/x-latex");
        types.computeIfAbsent(".lha", newList).add("application/lha");
        types.computeIfAbsent(".lha", newList).add("application/octet-stream");
        types.computeIfAbsent(".lha", newList).add("application/x-lha");
        types.computeIfAbsent(".lhx", newList).add("application/octet-stream");
        types.computeIfAbsent(".list", newList).add("text/plain");
        types.computeIfAbsent(".lma", newList).add("audio/nspaudio");
        types.computeIfAbsent(".lma", newList).add("audio/x-nspaudio");
        types.computeIfAbsent(".log", newList).add("text/plain");
        types.computeIfAbsent(".lsp", newList).add("application/x-lisp");
        types.computeIfAbsent(".lsp", newList).add("text/x-script.lisp");
        types.computeIfAbsent(".lst", newList).add("text/plain");
        types.computeIfAbsent(".lsx", newList).add("text/x-la-asf");
        types.computeIfAbsent(".ltx", newList).add("application/x-latex");
        types.computeIfAbsent(".lzh", newList).add("application/octet-stream");
        types.computeIfAbsent(".lzh", newList).add("application/x-lzh");
        types.computeIfAbsent(".lzx", newList).add("application/lzx");
        types.computeIfAbsent(".lzx", newList).add("application/octet-stream");
        types.computeIfAbsent(".lzx", newList).add("application/x-lzx");
        types.computeIfAbsent(".m", newList).add("text/plain");
        types.computeIfAbsent(".m", newList).add("text/x-m");
        types.computeIfAbsent(".m1v", newList).add("video/mpeg");
        types.computeIfAbsent(".m2a", newList).add("audio/mpeg");
        types.computeIfAbsent(".m2v", newList).add("video/mpeg");
        types.computeIfAbsent(".m3u", newList).add("audio/x-mpequrl");
        types.computeIfAbsent(".man", newList).add("application/x-troff-man");
        types.computeIfAbsent(".map", newList).add("application/x-navimap");
        types.computeIfAbsent(".mar", newList).add("text/plain");
        types.computeIfAbsent(".mbd", newList).add("application/mbedlet");
        types.computeIfAbsent(".mc$", newList).add("application/x-magic-cap-package-1.0");
        types.computeIfAbsent(".mcd", newList).add("application/mcad");
        types.computeIfAbsent(".mcd", newList).add("application/x-mathcad");
        types.computeIfAbsent(".mcf", newList).add("image/vasa");
        types.computeIfAbsent(".mcf", newList).add("text/mcf");
        types.computeIfAbsent(".mcp", newList).add("application/netmc");
        types.computeIfAbsent(".me", newList).add("application/x-troff-me");
        types.computeIfAbsent(".mht", newList).add("message/rfc822");
        types.computeIfAbsent(".mhtml", newList).add("message/rfc822");
        types.computeIfAbsent(".mid", newList).add("application/x-midi");
        types.computeIfAbsent(".mid", newList).add("audio/midi");
        types.computeIfAbsent(".mid", newList).add("audio/x-mid");
        types.computeIfAbsent(".mid", newList).add("audio/x-midi");
        types.computeIfAbsent(".mid", newList).add("music/crescendo");
        types.computeIfAbsent(".mid", newList).add("x-music/x-midi");
        types.computeIfAbsent(".midi", newList).add("application/x-midi");
        types.computeIfAbsent(".midi", newList).add("audio/midi");
        types.computeIfAbsent(".midi", newList).add("audio/x-mid");
        types.computeIfAbsent(".midi", newList).add("audio/x-midi");
        types.computeIfAbsent(".midi", newList).add("music/crescendo");
        types.computeIfAbsent(".midi", newList).add("x-music/x-midi");
        types.computeIfAbsent(".mif", newList).add("application/x-frame");
        types.computeIfAbsent(".mif", newList).add("application/x-mif");
        types.computeIfAbsent(".mime", newList).add("message/rfc822");
        types.computeIfAbsent(".mime", newList).add("www/mime");
        types.computeIfAbsent(".mjf", newList).add("audio/x-vnd.audioexplosion.mjuicemediafile");
        types.computeIfAbsent(".mjpg", newList).add("video/x-motion-jpeg");
        types.computeIfAbsent(".mm", newList).add("application/base64");
        types.computeIfAbsent(".mm", newList).add("application/x-meme");
        types.computeIfAbsent(".mme", newList).add("application/base64");
        types.computeIfAbsent(".mod", newList).add("audio/mod");
        types.computeIfAbsent(".mod", newList).add("audio/x-mod");
        types.computeIfAbsent(".moov", newList).add("video/quicktime");
        types.computeIfAbsent(".mov", newList).add("video/quicktime");
        types.computeIfAbsent(".movie", newList).add("video/x-sgi-movie");
        types.computeIfAbsent(".mp2", newList).add("audio/mpeg");
        types.computeIfAbsent(".mp2", newList).add("audio/x-mpeg");
        types.computeIfAbsent(".mp2", newList).add("video/mpeg");
        types.computeIfAbsent(".mp2", newList).add("video/x-mpeg");
        types.computeIfAbsent(".mp2", newList).add("video/x-mpeq2a");
        types.computeIfAbsent(".mp3", newList).add("audio/mpeg3");
        types.computeIfAbsent(".mp3", newList).add("audio/x-mpeg-3");
        types.computeIfAbsent(".mp3", newList).add("video/mpeg");
        types.computeIfAbsent(".mp3", newList).add("video/x-mpeg");
        types.computeIfAbsent(".mpa", newList).add("audio/mpeg");
        types.computeIfAbsent(".mpa", newList).add("video/mpeg");
        types.computeIfAbsent(".mpc", newList).add("application/x-project");
        types.computeIfAbsent(".mpe", newList).add("video/mpeg");
        types.computeIfAbsent(".mpeg", newList).add("video/mpeg");
        types.computeIfAbsent(".mpg", newList).add("audio/mpeg");
        types.computeIfAbsent(".mpg", newList).add("video/mpeg");
        types.computeIfAbsent(".mpga", newList).add("audio/mpeg");
        types.computeIfAbsent(".mpp", newList).add("application/vnd.ms-project");
        types.computeIfAbsent(".mpt", newList).add("application/x-project");
        types.computeIfAbsent(".mpv", newList).add("application/x-project");
        types.computeIfAbsent(".mpx", newList).add("application/x-project");
        types.computeIfAbsent(".mrc", newList).add("application/marc");
        types.computeIfAbsent(".ms", newList).add("application/x-troff-ms");
        types.computeIfAbsent(".mv", newList).add("video/x-sgi-movie");
        types.computeIfAbsent(".my", newList).add("audio/make");
        types.computeIfAbsent(".mzz", newList).add("application/x-vnd.audioexplosion.mzz");
        types.computeIfAbsent(".nap", newList).add("image/naplps");
        types.computeIfAbsent(".naplps", newList).add("image/naplps");
        types.computeIfAbsent(".nc", newList).add("application/x-netcdf");
        types.computeIfAbsent(".ncm", newList).add("application/vnd.nokia.configuration-message");
        types.computeIfAbsent(".nif", newList).add("image/x-niff");
        types.computeIfAbsent(".niff", newList).add("image/x-niff");
        types.computeIfAbsent(".nix", newList).add("application/x-mix-transfer");
        types.computeIfAbsent(".nsc", newList).add("application/x-conference");
        types.computeIfAbsent(".nvd", newList).add("application/x-navidoc");
        types.computeIfAbsent(".o", newList).add("application/octet-stream");
        types.computeIfAbsent(".oda", newList).add("application/oda");
        types.computeIfAbsent(".omc", newList).add("application/x-omc");
        types.computeIfAbsent(".omcd", newList).add("application/x-omcdatamaker");
        types.computeIfAbsent(".omcr", newList).add("application/x-omcregerator");
        types.computeIfAbsent(".p", newList).add("text/x-pascal");
        types.computeIfAbsent(".p10", newList).add("application/pkcs10");
        types.computeIfAbsent(".p10", newList).add("application/x-pkcs10");
        types.computeIfAbsent(".p12", newList).add("application/pkcs-12");
        types.computeIfAbsent(".p12", newList).add("application/x-pkcs12");
        types.computeIfAbsent(".p7a", newList).add("application/x-pkcs7-signature");
        types.computeIfAbsent(".p7c", newList).add("application/pkcs7-mime");
        types.computeIfAbsent(".p7c", newList).add("application/x-pkcs7-mime");
        types.computeIfAbsent(".p7m", newList).add("application/pkcs7-mime");
        types.computeIfAbsent(".p7m", newList).add("application/x-pkcs7-mime");
        types.computeIfAbsent(".p7r", newList).add("application/x-pkcs7-certreqresp");
        types.computeIfAbsent(".p7s", newList).add("application/pkcs7-signature");
        types.computeIfAbsent(".part", newList).add("application/pro_eng");
        types.computeIfAbsent(".pas", newList).add("text/pascal");
        types.computeIfAbsent(".pbm", newList).add("image/x-portable-bitmap");
        types.computeIfAbsent(".pcl", newList).add("application/vnd.hp-pcl");
        types.computeIfAbsent(".pcl", newList).add("application/x-pcl");
        types.computeIfAbsent(".pct", newList).add("image/x-pict");
        types.computeIfAbsent(".pcx", newList).add("image/x-pcx");
        types.computeIfAbsent(".pdb", newList).add("chemical/x-pdb");
        types.computeIfAbsent(".pdf", newList).add("application/pdf");
        types.computeIfAbsent(".pfunk", newList).add("audio/make");
        types.computeIfAbsent(".pfunk", newList).add("audio/make.my.funk");
        types.computeIfAbsent(".pgm", newList).add("image/x-portable-graymap");
        types.computeIfAbsent(".pgm", newList).add("image/x-portable-greymap");
        types.computeIfAbsent(".pic", newList).add("image/pict");
        types.computeIfAbsent(".pict", newList).add("image/pict");
        types.computeIfAbsent(".pkg", newList).add("application/x-newton-compatible-pkg");
        types.computeIfAbsent(".pko", newList).add("application/vnd.ms-pki.pko");
        types.computeIfAbsent(".pl", newList).add("text/plain");
        types.computeIfAbsent(".pl", newList).add("text/x-script.perl");
        types.computeIfAbsent(".plx", newList).add("application/x-pixclscript");
        types.computeIfAbsent(".pm", newList).add("image/x-xpixmap");
        types.computeIfAbsent(".pm", newList).add("text/x-script.perl-module");
        types.computeIfAbsent(".pm4", newList).add("application/x-pagemaker");
        types.computeIfAbsent(".pm5", newList).add("application/x-pagemaker");
        types.computeIfAbsent(".png", newList).add("image/png");
        types.computeIfAbsent(".pnm", newList).add("application/x-portable-anymap");
        types.computeIfAbsent(".pnm", newList).add("image/x-portable-anymap");
        types.computeIfAbsent(".pot", newList).add("application/mspowerpoint");
        types.computeIfAbsent(".pot", newList).add("application/vnd.ms-powerpoint");
        types.computeIfAbsent(".pov", newList).add("model/x-pov");
        types.computeIfAbsent(".ppa", newList).add("application/vnd.ms-powerpoint");
        types.computeIfAbsent(".ppm", newList).add("image/x-portable-pixmap");
        types.computeIfAbsent(".pps", newList).add("application/mspowerpoint");
        types.computeIfAbsent(".pps", newList).add("application/vnd.ms-powerpoint");
        types.computeIfAbsent(".ppt", newList).add("application/mspowerpoint");
        types.computeIfAbsent(".ppt", newList).add("application/powerpoint");
        types.computeIfAbsent(".ppt", newList).add("application/vnd.ms-powerpoint");
        types.computeIfAbsent(".ppt", newList).add("application/x-mspowerpoint");
        types.computeIfAbsent(".ppz", newList).add("application/mspowerpoint");
        types.computeIfAbsent(".pre", newList).add("application/x-freelance");
        types.computeIfAbsent(".prt", newList).add("application/pro_eng");
        types.computeIfAbsent(".ps", newList).add("application/postscript");
        types.computeIfAbsent(".psd", newList).add("application/octet-stream");
        types.computeIfAbsent(".pvu", newList).add("paleovu/x-pv");
        types.computeIfAbsent(".pwz", newList).add("application/vnd.ms-powerpoint");
        types.computeIfAbsent(".py", newList).add("text/x-script.phyton");
        types.computeIfAbsent(".pyc", newList).add("application/x-bytecode.python");
        types.computeIfAbsent(".qcp", newList).add("audio/vnd.qcelp");
        types.computeIfAbsent(".qd3", newList).add("x-world/x-3dmf");
        types.computeIfAbsent(".qd3d", newList).add("x-world/x-3dmf");
        types.computeIfAbsent(".qif", newList).add("image/x-quicktime");
        types.computeIfAbsent(".qt", newList).add("video/quicktime");
        types.computeIfAbsent(".qtc", newList).add("video/x-qtc");
        types.computeIfAbsent(".qti", newList).add("image/x-quicktime");
        types.computeIfAbsent(".qtif", newList).add("image/x-quicktime");
        types.computeIfAbsent(".ra", newList).add("audio/x-pn-realaudio");
        types.computeIfAbsent(".ra", newList).add("audio/x-pn-realaudio-plugin");
        types.computeIfAbsent(".ra", newList).add("audio/x-realaudio");
        types.computeIfAbsent(".ram", newList).add("audio/x-pn-realaudio");
        types.computeIfAbsent(".ras", newList).add("application/x-cmu-raster");
        types.computeIfAbsent(".ras", newList).add("image/cmu-raster");
        types.computeIfAbsent(".ras", newList).add("image/x-cmu-raster");
        types.computeIfAbsent(".rast", newList).add("image/cmu-raster");
        types.computeIfAbsent(".rexx", newList).add("text/x-script.rexx");
        types.computeIfAbsent(".rf", newList).add("image/vnd.rn-realflash");
        types.computeIfAbsent(".rgb", newList).add("image/x-rgb");
        types.computeIfAbsent(".rm", newList).add("application/vnd.rn-realmedia");
        types.computeIfAbsent(".rm", newList).add("audio/x-pn-realaudio");
        types.computeIfAbsent(".rmi", newList).add("audio/mid");
        types.computeIfAbsent(".rmm", newList).add("audio/x-pn-realaudio");
        types.computeIfAbsent(".rmp", newList).add("audio/x-pn-realaudio");
        types.computeIfAbsent(".rmp", newList).add("audio/x-pn-realaudio-plugin");
        types.computeIfAbsent(".rng", newList).add("application/ringing-tones");
        types.computeIfAbsent(".rng", newList).add("application/vnd.nokia.ringing-tone");
        types.computeIfAbsent(".rnx", newList).add("application/vnd.rn-realplayer");
        types.computeIfAbsent(".roff", newList).add("application/x-troff");
        types.computeIfAbsent(".rp", newList).add("image/vnd.rn-realpix");
        types.computeIfAbsent(".rpm", newList).add("audio/x-pn-realaudio-plugin");
        types.computeIfAbsent(".rt", newList).add("text/richtext");
        types.computeIfAbsent(".rt", newList).add("text/vnd.rn-realtext");
        types.computeIfAbsent(".rtf", newList).add("application/rtf");
        types.computeIfAbsent(".rtf", newList).add("application/x-rtf");
        types.computeIfAbsent(".rtf", newList).add("text/richtext");
        types.computeIfAbsent(".rtx", newList).add("application/rtf");
        types.computeIfAbsent(".rtx", newList).add("text/richtext");
        types.computeIfAbsent(".rv", newList).add("video/vnd.rn-realvideo");
        types.computeIfAbsent(".s", newList).add("text/x-asm");
        types.computeIfAbsent(".s3m", newList).add("audio/s3m");
        types.computeIfAbsent(".saveme", newList).add("application/octet-stream");
        types.computeIfAbsent(".sbk", newList).add("application/x-tbook");
        types.computeIfAbsent(".scm", newList).add("application/x-lotusscreencam");
        types.computeIfAbsent(".scm", newList).add("text/x-script.guile");
        types.computeIfAbsent(".scm", newList).add("text/x-script.scheme");
        types.computeIfAbsent(".scm", newList).add("video/x-scm");
        types.computeIfAbsent(".sdml", newList).add("text/plain");
        types.computeIfAbsent(".sdp", newList).add("application/sdp");
        types.computeIfAbsent(".sdp", newList).add("application/x-sdp");
        types.computeIfAbsent(".sdr", newList).add("application/sounder");
        types.computeIfAbsent(".sea", newList).add("application/sea");
        types.computeIfAbsent(".sea", newList).add("application/x-sea");
        types.computeIfAbsent(".set", newList).add("application/set");
        types.computeIfAbsent(".sgm", newList).add("text/sgml");
        types.computeIfAbsent(".sgm", newList).add("text/x-sgml");
        types.computeIfAbsent(".sgml", newList).add("text/sgml");
        types.computeIfAbsent(".sgml", newList).add("text/x-sgml");
        types.computeIfAbsent(".sh", newList).add("application/x-bsh");
        types.computeIfAbsent(".sh", newList).add("application/x-sh");
        types.computeIfAbsent(".sh", newList).add("application/x-shar");
        types.computeIfAbsent(".sh", newList).add("text/x-script.sh");
        types.computeIfAbsent(".shar", newList).add("application/x-bsh");
        types.computeIfAbsent(".shar", newList).add("application/x-shar");
        types.computeIfAbsent(".shtml", newList).add("text/html");
        types.computeIfAbsent(".shtml", newList).add("text/x-server-parsed-html");
        types.computeIfAbsent(".sid", newList).add("audio/x-psid");
        types.computeIfAbsent(".sit", newList).add("application/x-sit");
        types.computeIfAbsent(".sit", newList).add("application/x-stuffit");
        types.computeIfAbsent(".skd", newList).add("application/x-koan");
        types.computeIfAbsent(".skm", newList).add("application/x-koan");
        types.computeIfAbsent(".skp", newList).add("application/x-koan");
        types.computeIfAbsent(".skt", newList).add("application/x-koan");
        types.computeIfAbsent(".sl", newList).add("application/x-seelogo");
        types.computeIfAbsent(".smi", newList).add("application/smil");
        types.computeIfAbsent(".smil", newList).add("application/smil");
        types.computeIfAbsent(".snd", newList).add("audio/basic");
        types.computeIfAbsent(".snd", newList).add("audio/x-adpcm");
        types.computeIfAbsent(".sol", newList).add("application/solids");
        types.computeIfAbsent(".spc", newList).add("application/x-pkcs7-certificates");
        types.computeIfAbsent(".spc", newList).add("text/x-speech");
        types.computeIfAbsent(".spl", newList).add("application/futuresplash");
        types.computeIfAbsent(".spr", newList).add("application/x-sprite");
        types.computeIfAbsent(".sprite", newList).add("application/x-sprite");
        types.computeIfAbsent(".src", newList).add("application/x-wais-source");
        types.computeIfAbsent(".ssi", newList).add("text/x-server-parsed-html");
        types.computeIfAbsent(".ssm", newList).add("application/streamingmedia");
        types.computeIfAbsent(".sst", newList).add("application/vnd.ms-pki.certstore");
        types.computeIfAbsent(".step", newList).add("application/step");
        types.computeIfAbsent(".stl", newList).add("application/sla");
        types.computeIfAbsent(".stl", newList).add("application/vnd.ms-pki.stl");
        types.computeIfAbsent(".stl", newList).add("application/x-navistyle");
        types.computeIfAbsent(".stp", newList).add("application/step");
        types.computeIfAbsent(".sv4cpio", newList).add("application/x-sv4cpio");
        types.computeIfAbsent(".sv4crc", newList).add("application/x-sv4crc");
        types.computeIfAbsent(".svf", newList).add("image/vnd.dwg");
        types.computeIfAbsent(".svf", newList).add("image/x-dwg");
        types.computeIfAbsent(".svr", newList).add("application/x-world");
        types.computeIfAbsent(".svr", newList).add("x-world/x-svr");
        types.computeIfAbsent(".swf", newList).add("application/x-shockwave-flash");
        types.computeIfAbsent(".t", newList).add("application/x-troff");
        types.computeIfAbsent(".talk", newList).add("text/x-speech");
        types.computeIfAbsent(".tar", newList).add("application/x-tar");
        types.computeIfAbsent(".tbk", newList).add("application/toolbook");
        types.computeIfAbsent(".tbk", newList).add("application/x-tbook");
        types.computeIfAbsent(".tcl", newList).add("application/x-tcl");
        types.computeIfAbsent(".tcl", newList).add("text/x-script.tcl");
        types.computeIfAbsent(".tcsh", newList).add("text/x-script.tcsh");
        types.computeIfAbsent(".tex", newList).add("application/x-tex");
        types.computeIfAbsent(".texi", newList).add("application/x-texinfo");
        types.computeIfAbsent(".texinfo", newList).add("application/x-texinfo");
        types.computeIfAbsent(".text", newList).add("application/plain");
        types.computeIfAbsent(".text", newList).add("text/plain");
        types.computeIfAbsent(".tgz", newList).add("application/gnutar");
        types.computeIfAbsent(".tgz", newList).add("application/x-compressed");
        types.computeIfAbsent(".tif", newList).add("image/tiff");
        types.computeIfAbsent(".tif", newList).add("image/x-tiff");
        types.computeIfAbsent(".tiff", newList).add("image/tiff");
        types.computeIfAbsent(".tiff", newList).add("image/x-tiff");
        types.computeIfAbsent(".tr", newList).add("application/x-troff");
        types.computeIfAbsent(".tsi", newList).add("audio/tsp-audio");
        types.computeIfAbsent(".tsp", newList).add("application/dsptype");
        types.computeIfAbsent(".tsp", newList).add("audio/tsplayer");
        types.computeIfAbsent(".tsv", newList).add("text/tab-separated-values");
        types.computeIfAbsent(".turbot", newList).add("image/florian");
        types.computeIfAbsent(".txt", newList).add("text/plain");
        types.computeIfAbsent(".uil", newList).add("text/x-uil");
        types.computeIfAbsent(".uni", newList).add("text/uri-list");
        types.computeIfAbsent(".unis", newList).add("text/uri-list");
        types.computeIfAbsent(".unv", newList).add("application/i-deas");
        types.computeIfAbsent(".uri", newList).add("text/uri-list");
        types.computeIfAbsent(".uris", newList).add("text/uri-list");
        types.computeIfAbsent(".ustar", newList).add("application/x-ustar");
        types.computeIfAbsent(".ustar", newList).add("multipart/x-ustar");
        types.computeIfAbsent(".uu", newList).add("application/octet-stream");
        types.computeIfAbsent(".uu", newList).add("text/x-uuencode");
        types.computeIfAbsent(".uue", newList).add("text/x-uuencode");
        types.computeIfAbsent(".vcd", newList).add("application/x-cdlink");
        types.computeIfAbsent(".vcs", newList).add("text/x-vcalendar");
        types.computeIfAbsent(".vda", newList).add("application/vda");
        types.computeIfAbsent(".vdo", newList).add("video/vdo");
        types.computeIfAbsent(".vew", newList).add("application/groupwise");
        types.computeIfAbsent(".viv", newList).add("video/vivo");
        types.computeIfAbsent(".viv", newList).add("video/vnd.vivo");
        types.computeIfAbsent(".vivo", newList).add("video/vivo");
        types.computeIfAbsent(".vivo", newList).add("video/vnd.vivo");
        types.computeIfAbsent(".vmd", newList).add("application/vocaltec-media-desc");
        types.computeIfAbsent(".vmf", newList).add("application/vocaltec-media-file");
        types.computeIfAbsent(".voc", newList).add("audio/voc");
        types.computeIfAbsent(".voc", newList).add("audio/x-voc");
        types.computeIfAbsent(".vos", newList).add("video/vosaic");
        types.computeIfAbsent(".vox", newList).add("audio/voxware");
        types.computeIfAbsent(".vqe", newList).add("audio/x-twinvq-plugin");
        types.computeIfAbsent(".vqf", newList).add("audio/x-twinvq");
        types.computeIfAbsent(".vql", newList).add("audio/x-twinvq-plugin");
        types.computeIfAbsent(".vrml", newList).add("application/x-vrml");
        types.computeIfAbsent(".vrml", newList).add("model/vrml");
        types.computeIfAbsent(".vrml", newList).add("x-world/x-vrml");
        types.computeIfAbsent(".vrt", newList).add("x-world/x-vrt");
        types.computeIfAbsent(".vsd", newList).add("application/x-visio");
        types.computeIfAbsent(".vst", newList).add("application/x-visio");
        types.computeIfAbsent(".vsw", newList).add("application/x-visio");
        types.computeIfAbsent(".w60", newList).add("application/wordperfect6.0");
        types.computeIfAbsent(".w61", newList).add("application/wordperfect6.1");
        types.computeIfAbsent(".w6w", newList).add("application/msword");
        types.computeIfAbsent(".wav", newList).add("audio/wav");
        types.computeIfAbsent(".wav", newList).add("audio/x-wav");
        types.computeIfAbsent(".wb1", newList).add("application/x-qpro");
        types.computeIfAbsent(".wbmp", newList).add("image/vnd.wap.wbmp");
        types.computeIfAbsent(".web", newList).add("application/vnd.xara");
        types.computeIfAbsent(".wiz", newList).add("application/msword");
        types.computeIfAbsent(".wk1", newList).add("application/x-123");
        types.computeIfAbsent(".wmf", newList).add("windows/metafile");
        types.computeIfAbsent(".wml", newList).add("text/vnd.wap.wml");
        types.computeIfAbsent(".wmlc", newList).add("application/vnd.wap.wmlc");
        types.computeIfAbsent(".wmls", newList).add("text/vnd.wap.wmlscript");
        types.computeIfAbsent(".wmlsc", newList).add("application/vnd.wap.wmlscriptc");
        types.computeIfAbsent(".word", newList).add("application/msword");
        types.computeIfAbsent(".wp", newList).add("application/wordperfect");
        types.computeIfAbsent(".wp5", newList).add("application/wordperfect");
        types.computeIfAbsent(".wp5", newList).add("application/wordperfect6.0");
        types.computeIfAbsent(".wp6", newList).add("application/wordperfect");
        types.computeIfAbsent(".wpd", newList).add("application/wordperfect");
        types.computeIfAbsent(".wpd", newList).add("application/x-wpwin");
        types.computeIfAbsent(".wq1", newList).add("application/x-lotus");
        types.computeIfAbsent(".wri", newList).add("application/mswrite");
        types.computeIfAbsent(".wri", newList).add("application/x-wri");
        types.computeIfAbsent(".wrl", newList).add("application/x-world");
        types.computeIfAbsent(".wrl", newList).add("model/vrml");
        types.computeIfAbsent(".wrl", newList).add("x-world/x-vrml");
        types.computeIfAbsent(".wrz", newList).add("model/vrml");
        types.computeIfAbsent(".wrz", newList).add("x-world/x-vrml");
        types.computeIfAbsent(".wsc", newList).add("text/scriplet");
        types.computeIfAbsent(".wsrc", newList).add("application/x-wais-source");
        types.computeIfAbsent(".wtk", newList).add("application/x-wintalk");
        types.computeIfAbsent(".xbm", newList).add("image/x-xbitmap");
        types.computeIfAbsent(".xbm", newList).add("image/x-xbm");
        types.computeIfAbsent(".xbm", newList).add("image/xbm");
        types.computeIfAbsent(".xdr", newList).add("video/x-amt-demorun");
        types.computeIfAbsent(".xgz", newList).add("xgl/drawing");
        types.computeIfAbsent(".xif", newList).add("image/vnd.xiff");
        types.computeIfAbsent(".xl", newList).add("application/excel");
        types.computeIfAbsent(".xla", newList).add("application/excel");
        types.computeIfAbsent(".xla", newList).add("application/x-excel");
        types.computeIfAbsent(".xla", newList).add("application/x-msexcel");
        types.computeIfAbsent(".xlb", newList).add("application/excel");
        types.computeIfAbsent(".xlb", newList).add("application/vnd.ms-excel");
        types.computeIfAbsent(".xlb", newList).add("application/x-excel");
        types.computeIfAbsent(".xlc", newList).add("application/excel");
        types.computeIfAbsent(".xlc", newList).add("application/vnd.ms-excel");
        types.computeIfAbsent(".xlc", newList).add("application/x-excel");
        types.computeIfAbsent(".xld", newList).add("application/excel");
        types.computeIfAbsent(".xld", newList).add("application/x-excel");
        types.computeIfAbsent(".xlk", newList).add("application/excel");
        types.computeIfAbsent(".xlk", newList).add("application/x-excel");
        types.computeIfAbsent(".xll", newList).add("application/excel");
        types.computeIfAbsent(".xll", newList).add("application/vnd.ms-excel");
        types.computeIfAbsent(".xll", newList).add("application/x-excel");
        types.computeIfAbsent(".xlm", newList).add("application/excel");
        types.computeIfAbsent(".xlm", newList).add("application/vnd.ms-excel");
        types.computeIfAbsent(".xlm", newList).add("application/x-excel");
        types.computeIfAbsent(".xls", newList).add("application/excel");
        types.computeIfAbsent(".xls", newList).add("application/vnd.ms-excel");
        types.computeIfAbsent(".xls", newList).add("application/x-excel");
        types.computeIfAbsent(".xls", newList).add("application/x-msexcel");
        types.computeIfAbsent(".xlt", newList).add("application/excel");
        types.computeIfAbsent(".xlt", newList).add("application/x-excel");
        types.computeIfAbsent(".xlv", newList).add("application/excel");
        types.computeIfAbsent(".xlv", newList).add("application/x-excel");
        types.computeIfAbsent(".xlw", newList).add("application/excel");
        types.computeIfAbsent(".xlw", newList).add("application/vnd.ms-excel");
        types.computeIfAbsent(".xlw", newList).add("application/x-excel");
        types.computeIfAbsent(".xlw", newList).add("application/x-msexcel");
        types.computeIfAbsent(".xm", newList).add("audio/xm");
        types.computeIfAbsent(".xml", newList).add("application/xml");
        types.computeIfAbsent(".xml", newList).add("text/xml");
        types.computeIfAbsent(".xmz", newList).add("xgl/movie");
        types.computeIfAbsent(".xpix", newList).add("application/x-vnd.ls-xpix");
        types.computeIfAbsent(".xpm", newList).add("image/x-xpixmap");
        types.computeIfAbsent(".xpm", newList).add("image/xpm");
        types.computeIfAbsent(".x-png", newList).add("image/png");
        types.computeIfAbsent(".xsr", newList).add("video/x-amt-showrun");
        types.computeIfAbsent(".xwd", newList).add("image/x-xwd");
        types.computeIfAbsent(".xwd", newList).add("image/x-xwindowdump");
        types.computeIfAbsent(".xyz", newList).add("chemical/x-pdb");
        types.computeIfAbsent(".z", newList).add("application/x-compress");
        types.computeIfAbsent(".z", newList).add("application/x-compressed");
        types.computeIfAbsent(".zip", newList).add("application/x-compressed");
        types.computeIfAbsent(".zip", newList).add("application/x-zip-compressed");
        types.computeIfAbsent(".zip", newList).add("application/zip");
        types.computeIfAbsent(".zip", newList).add("multipart/x-zip");
        types.computeIfAbsent(".zoo", newList).add("application/octet-stream");
        types.computeIfAbsent(".zsh", newList).add("text/x-script.zsh");

        ALL_EXTENSIONS_TO_MIME_TYPES = Collections.unmodifiableMap(types);

        Set<String> unsupportedTypes = new TreeSet<>();
        unsupportedTypes.add(".ade");
        unsupportedTypes.add(".adp");
        unsupportedTypes.add(".app");
        unsupportedTypes.add(".asp");
        unsupportedTypes.add(".bas");
        unsupportedTypes.add(".bat");
        unsupportedTypes.add(".cer");
        unsupportedTypes.add(".chm");
        unsupportedTypes.add(".cmd");
        unsupportedTypes.add(".com");
        unsupportedTypes.add(".cpl");
        unsupportedTypes.add(".crt");
        unsupportedTypes.add(".csh");
        unsupportedTypes.add(".der");
        unsupportedTypes.add(".exe");
        unsupportedTypes.add(".fxp");
        unsupportedTypes.add(".gadget");
        unsupportedTypes.add(".hta");
        unsupportedTypes.add(".inf");
        unsupportedTypes.add(".ins");
        unsupportedTypes.add(".isp");
        unsupportedTypes.add(".its");
        unsupportedTypes.add(".js");
        unsupportedTypes.add(".jse");
        unsupportedTypes.add(".ksh");
        unsupportedTypes.add(".lib");
        unsupportedTypes.add(".lnk");
        unsupportedTypes.add(".mad");
        unsupportedTypes.add(".maf");
        unsupportedTypes.add(".mag");
        unsupportedTypes.add(".mam");
        unsupportedTypes.add(".maq");
        unsupportedTypes.add(".mar");
        unsupportedTypes.add(".mas");
        unsupportedTypes.add(".mat");
        unsupportedTypes.add(".mau");
        unsupportedTypes.add(".mav");
        unsupportedTypes.add(".maw");
        unsupportedTypes.add(".mda");
        unsupportedTypes.add(".mdb");
        unsupportedTypes.add(".mde");
        unsupportedTypes.add(".mdt");
        unsupportedTypes.add(".mdw");
        unsupportedTypes.add(".mdz");
        unsupportedTypes.add(".msc");
        unsupportedTypes.add(".msh");
        unsupportedTypes.add(".msh1");
        unsupportedTypes.add(".msh2");
        unsupportedTypes.add(".mshxml");
        unsupportedTypes.add(".msh1xml");
        unsupportedTypes.add(".msh2xml");
        unsupportedTypes.add(".msi");
        unsupportedTypes.add(".mst");
        unsupportedTypes.add(".ops");
        unsupportedTypes.add(".pcd");
        unsupportedTypes.add(".pif");
        unsupportedTypes.add(".plg");
        unsupportedTypes.add(".prf");
        unsupportedTypes.add(".prg");
        unsupportedTypes.add(".reg");
        unsupportedTypes.add(".scf");
        unsupportedTypes.add(".scr");
        unsupportedTypes.add(".sct");
        unsupportedTypes.add(".shb");
        unsupportedTypes.add(".shs");
        unsupportedTypes.add(".sys");
        unsupportedTypes.add(".ps1");
        unsupportedTypes.add(".ps1xml");
        unsupportedTypes.add(".ps2");
        unsupportedTypes.add(".ps2xml");
        unsupportedTypes.add(".psc1");
        unsupportedTypes.add(".psc2");
        unsupportedTypes.add(".tmp");
        unsupportedTypes.add(".url");
        unsupportedTypes.add(".vb");
        unsupportedTypes.add(".vbe");
        unsupportedTypes.add(".vbs");
        unsupportedTypes.add(".vps");
        unsupportedTypes.add(".vsmacros");
        unsupportedTypes.add(".vss");
        unsupportedTypes.add(".vst");
        unsupportedTypes.add(".vsw");
        unsupportedTypes.add(".vxd");
        unsupportedTypes.add(".ws");
        unsupportedTypes.add(".wsc");
        unsupportedTypes.add(".wsf");
        unsupportedTypes.add(".wsh");

        UNSUPPORTED_EXTENSIONS = Collections.unmodifiableSet(unsupportedTypes);
        UNSUPPORTED_MIME_TYPES = ALL_EXTENSIONS_TO_MIME_TYPES.entrySet().stream()
            .filter(e -> UNSUPPORTED_EXTENSIONS.contains(e.getKey()))
            .flatMap(e -> e.getValue().stream())
            .collect(Collectors.toSet());
    }

    static boolean isMimeTypeSupported(String mimeType) {
        return !UNSUPPORTED_MIME_TYPES.contains(mimeType);
    }

    static boolean isFileExtensionSupported(String filename) {
        return !UNSUPPORTED_EXTENSIONS.contains(fileExtension(filename));
    }

    @Nonnull
    static String fileExtension(final String filename) {
        int i = filename.lastIndexOf('.');
        return i < 0 ? "" : filename.substring(i);
    }

    @Nonnull
    static String mimeTypeFromFilename(String filename) {
        return ALL_EXTENSIONS_TO_MIME_TYPES.getOrDefault(fileExtension(filename), Collections.emptyList()).stream().findFirst().orElse("");
    }

}
