/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2018-2023 Agorapulse.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import groovy.transform.Field

@Field static final Map<String, String> MICRONAUT_1 = [
    'micronaut-runtime-groovy': 'io.micronaut',
    'micronaut-function-groovy': 'io.micronaut',
    'micronaut-aws-common': 'io.micronaut.configuration',
]

@Field static final Map<String, String> MICRONAUT_2 = [
    'micronaut-runtime-groovy': 'io.micronaut.groovy',
    'micronaut-function-groovy': 'io.micronaut.groovy',
    'micronaut-aws-common': 'io.micronaut.aws',
]

ext.micronautMigratedDependency = { String module ->
    Map<String, String> groups  = project.getProperty('micronautVersion').startsWith('1') ? MICRONAUT_1 : MICRONAUT_2
    String group = groups[module]

    if (!group) {
        throw new IllegalArgumentException("Cannot find group for $module. Known modules: ${groups.keySet()}")
    }

    return "$group:$module"
}
